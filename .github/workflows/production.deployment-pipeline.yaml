name: Production Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack and Use Latest Yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      - name: Configure Environment Variables
        run: |
          echo "VITE_APP_GATEWAY_SERVER_URL=${{ vars.GATEWAY_SERVER_URL }}" >> .env.local
          echo "VITE_APP_TELEMETRY_API=${{ vars.TELEMETRY_API }}" >> .env.local

      - name: Install dependencies
        run: |
          yarn install

      - name: Build project
        run: |
          yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: production-build
          path: dist
          overwrite: true

  deploy:
    name: Execute Deployment Script on Server
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://telemetry.smswithoutborders.com
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: production-build

      - name: Securely Copy Artifacts to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "./dist/*"
          target: ${{ secrets.BUILD_PATH }}
          strip_components: 1
          rm: true

      - name: Execute Remote SSH Commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            set -e

            echo "============================"
            echo "üöÄ Deploy Project ..."
            echo "============================"
            if ! ${{ secrets.BUILD_CMD }}; then
              echo "‚ùå Error deploying project!"
              exit 1
            fi
            echo "==============================="
            echo "‚úÖ Deployment complete"
            echo "==============================="